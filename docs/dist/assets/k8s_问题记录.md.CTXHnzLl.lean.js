import{_ as i,c as a,a0 as n,o as e}from"./chunks/framework.FNcZXSxR.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"k8s/问题记录.md","filePath":"k8s/问题记录.md","lastUpdated":1736851049000}'),t={name:"k8s/问题记录.md"};function k(l,s,h,p,r,F){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="问题1-code-unimplemented-desc-unknown-service-runtime-v1-imageservice" tabindex="-1">问题1: code = Unimplemented desc = unknown service runtime.v1.ImageService&quot; <a class="header-anchor" href="#问题1-code-unimplemented-desc-unknown-service-runtime-v1-imageservice" aria-label="Permalink to &quot;问题1: code = Unimplemented desc = unknown service runtime.v1.ImageService&quot;&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@k8s-master </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# kubeadm config images pull --config kubeadm.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;registry.aliyuncs.com/google_containers/kube-apiserver:v1.24.4&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time=&quot;2023-02-12T00:12:41+08:00&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> level=fatal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> msg=&quot;validate service connection: CRI v1 image API is not implemented for endpoint </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unix:///var/run/containerd/containerd.sock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: rpc error: code = Unimplemented desc = unknown service runtime.v1.ImageService&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">To</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> see</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> trace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> execute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --v=5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> higher</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解决过程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@k8s-master </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# mv /etc/containerd/config.toml /etc/containerd/config.toml.bak</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/containerd/config.toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[plugins.&quot;io.containerd.grpc.v1.cri&quot;]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  systemd_cgroup = true</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd</span></span></code></pre></div>`,2)]))}const c=i(t,[["render",k]]);export{o as __pageData,c as default};
